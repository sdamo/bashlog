#!/usr/bin/env bash

# Проверка входных данных
if [[ $# -eq 0 ]]
then

    exit 0

fi

EVENT="$1"
MESSAGE="$2"
TIME="$3"
LOG_FILE="$4"

function read_config() {

    CONFIG=$1

    while IFS=";" read CFG_EVENT CFG_COLOR
    do

        EVENTS[${CFG_EVENT}]=${CFG_COLOR}

    done < ${CONFIG}

}

declare -A EVENTS

declare -A COLORS=(
    [NO]="\033[0m"
    # ORIGINAL
    [BLACK]="\033[0;30m"
    [RED]="\033[0;31m"
    [GREEN]="\033[0;32m"
    [ORANGE]="\033[0;33m"
    [BLUE]="\033[0;34m"
    [PURPLE]="\033[0;35m"
    [CYAN]="\033[0;36m"
    [GRAY]="\033[0;37m"
    # BOLD
    [BOLD_BLACK]="\033[1;30m"
    [BOLD_RED]="\033[1;31m"
    [BOLD_GREEN]="\033[1;32m"
    [BOLD_ORANGE]="\033[1;33m"
    [BOLD_BLUE]="\033[1;34m"
    [BOLD_PURPLE]="\033[1;35m"
    [BOLD_CYAN]="\033[1;36m"
    [BOLD_GRAY]="\033[1;37m"
)

# Загрузка конфигурации шаблонов
if [[ -f ${PWD}/bashlog.config ]]
then

    read_config ${PWD}/bashlog.config

else

    read_config `dirname $0`/bashlog.config

fi

if [[ -n "${EVENTS[$EVENT]}" ]]
then

    COLOR=${COLORS[${EVENTS[$EVENT]}]}

else

    COLOR=${COLORS[GRAY]}

fi

if [[ ${TIME} ]]
then

    NOW_TIME=`date +"%Y-%m-%d %H:%M:%S "`

fi

echo -e "${NOW_TIME}${COLOR}[${EVENT}] ${MESSAGE}${COLORS[NO]}"
